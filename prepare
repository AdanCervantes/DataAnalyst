### Divvy_Exercise_Full_Year_Analysis ###

# This analysis is based on the Divvy case study "'Sophisticated, Clear, and Polished’: Divvy and Data Visualization" written by Kevin Hartman (found here: https://artscience.blog/home/divvy-dataviz-case-study). The purpose of this script is to consolidate downloaded Divvy data into a single dataframe and then conduct simple analysis to help answer the key question: “In what ways do members and casual riders use Divvy bikes differently?”

# # # # # # # # # # # # # # # # # # # # # # # 
# Install required packages
# tidyverse for data import and wrangling
# lubridate for date functions
# ggplot for visualization
# # # # # # # # # # # # # # # # # # # # # # #  

library(tidyverse)  #helps wrangle data
library(lubridate)  #helps wrangle date attributes
library(ggplot2)  #helps visualize data
getwd() #displays your working directory
setwd("/Coursera") #sets your working directory to simplify calls to data 

#=====================
# STEP 1: COLLECT DATA
#=====================
# Upload Divvy datasets (csv files) here
feb2022 <- read.csv("Coursera/202202-divvy-tripdata-clean.csv")
mar2022 <- read.csv("Coursera/202203-divvy-tripdata-clean.csv")
abr2022 <- read.csv("Coursera/202204-divvy-tripdata-clean.csv")
may2022 <- read.csv("Coursera/202205-divvy-tripdata-clean.csv")
jun2022 <- read.csv("Coursera/202206-divvy-tripdata-clean.csv")
jul2022 <- read.csv("Coursera/202207-divvy-tripdata-clean.csv")
ago2022 <- read.csv("Coursera/202208-divvy-tripdata-clean.csv")
sep2022 <- read.csv("Coursera/202209-divvy-tripdata-clean.csv")
oct2022 <- read.csv("Coursera/202210-divvy-tripdata-clean.csv")
nov2022 <- read.csv("Coursera/202211-divvy-tripdata-clean.csv")
dic2022 <- read.csv("Coursera/202212-divvy-tripdata-clean.csv")
jan2023 <- read.csv("Coursera/202301-divvy-tripdata-clean.csv")
feb2023 <- read.csv("Coursera/202302-divvy-tripdata-clean.csv")

#====================================================
# STEP 2: WRANGLE DATA AND COMBINE INTO A SINGLE FILE
#====================================================

# Rename columns  to make them consistent in the year's files

# Inspect the dataframes and look for incongruencies
str(feb2022) #feb22 mar22 apr22 dic2022 jan23 feb23
str(may2022)
#Through may and november the coords data is double instead of char


# Convert start_lat and (all coords) to character so that they can stack correctly
feb2022 <-  mutate(feb2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
mar2022 <-  mutate(mar2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
abr2022 <-  mutate(abr2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
may2022 <-  mutate(may2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
jun2022 <-  mutate(jun2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
jul2022 <-  mutate(jul2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
ago2022 <-  mutate(ago2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
sep2022 <-  mutate(sep2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
oct2022 <-  mutate(oct2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))

dic2022 <-  mutate(dic2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
jan2023 <-  mutate(jan2023, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
feb2023 <-  mutate(feb2023, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))
nov2022 <-  mutate(nov2022, start_lat = as.character(start_lat)
                   ,start_lng = as.character(start_lng)
                   , end_lat = as.character(end_lat)
                   , end_lng = as.character(end_lng)
                   , start_station_id = as.character(start_station_id)
                   , end_station_id = as.character(end_station_id)
                   , started_at = as.POSIXct(started_at,format="%d/%m/%Y %H:%M")
                   , ended_at = as.POSIXct(ended_at, format="%d/%m/%Y %H:%M" )
                   , ride_length = chron(times= ride_length))


# Stack individual quarter's data frames into one big data frame
all_year <- bind_rows(feb2022, mar2022, abr2022, may2022, jun2022, jul2022, ago2022, sep2022, oct2022, nov2022, dic2022, jan2023, feb2023)

# Write filtered data into a new file.
write.csv(all_year,"output.csv", row.names = FALSE)

#======================================================
# STEP 3: CLEAN UP AND ADD DATA TO PREPARE FOR ANALYSIS
#======================================================
# Inspect the new table that has been created
colnames(all_year)  #List of column names
nrow(all_year)  #How many rows are in data frame?
dim(all_year)  #Dimensions of the data frame?
head(all_year)  #See the first 6 rows of data frame.  Also tail(all_trips)
str(all_year)  #See list of columns and data types (numeric, character, etc)
summary(all_year)  #Statistical summary of data. Mainly for numerics
all_year <- na.omit(all_year) #remove all NA's from data
